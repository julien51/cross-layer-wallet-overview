{"version":3,"sources":["types/index.ts","assets/icon192.png","services/balanceService.ts","components/web3/connectors.ts","components/web3/ConnectButton.tsx","services/localStorage.ts","components/Dashboard.tsx","components/web3/Web3ConnectionManager.tsx","components/web3/hooks.ts","components/web3/WrappedWeb3ReactProvider.tsx","App.tsx","services/reportWebVitals.ts","index.tsx"],"names":["WalletKey","ChainKey","RpcUrls","process","provider","ETH","ethers","providers","JsonRpcProvider","BNB","POL","DAI","availableTokens","Contract","erc20_abi","getListOfSupportedTokens","Object","keys","tokenList","walletAdress","a","every","r","includes","console","log","balances","t","balanceAcrossChains","providerIndex","getBalance","nativeBalance","parseFloat","utils","formatEther","tokenIndex","chains","entries","chain","contract","balanceOf","externalBalance","table","wallet","Promise","resolve","reject","onEth","onBsc","onPolygon","onXdai","ethBalances","daiBalances","polygonBalances","bnbBalances","getTokenBalanceFor","CHAINS","MAINNET","ROPSTEN","RINKEBY","KOVAN","BSC","POLYGON","MUMBAI","XDAI","RPC_URLS","injected","InjectedConnector","supportedChainIds","values","network","NetworkConnector","urls","fromEntries","map","i","defaultChainId","ConnectButton","activate","useWeb3React","style","display","onClick","isSupported","itemBackup","localStorage","getItem","removeItem","setItem","e","storeWallets","wallets","JSON","stringify","item","address","COINS","ChainDetails","name","gasName","coins","key","img_url","showGasModal","gas","Modal","info","title","content","href","target","rel","renderGas","data","walletKey","coinName","coin","find","amounts","amount_coin","tooltipEmpty","type","block","tooltip","className","Button","width","active","size","shape","color","count","offset","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","renderAmounts","height","amount_usd","renderSummary","summary","percentage_of_portfolio","buildDataRows","emptyWalletAmounts","portfolio","WALLET1","deepClone","WALLET2","WALLET3","WALLET4","buildDataRow","baseWidth","coinColumn","fixed","dataIndex","render","src","alt","portfolioColumn","addColumn","walletColumn","children","baseColumns","emptySummaryAmounts","emptySummaryWallet","emptySummary","obj","parse","Dashboard","useState","setData","columns","setColumns","setSummary","setWallets","walletModalVisible","setWalletModalVisible","walletModalAddress","setWalletModalAddress","web3","calculatePortfolio","forEach","chainKey","clearWalletData","updateAmounts","coinKey","eth","bsc","pol","dai","updateWalletAmounts","getEthAcrossChains","then","getDaiAcrossChains","getPolygonAcrossChains","getBNBAcrossChains","findUnusedWalletKey","Error","showWalletModal","getModalAddressSuggestion","addedWallets","web3Account","account","indexOf","handleWalletModalAdd","isAddress","loading","newWallets","addWallet","handleWalletModalClose","length","useEffect","changed","buildWalletColumn","span","substr","SyncOutlined","triggerWalletUpdate","DeleteOutlined","filter","removeWallet","walletColumns","newSummary","reduce","chainName","storedWallets","walletsString","addresses","walletKeys","walletIndex","readWallets","summaryIndex","minHeight","dataSource","bordered","scroll","x","y","pagination","Summary","Row","Cell","index","visible","onOk","onCancel","footer","placeholder","prefix","WalletOutlined","value","onChange","event","Web3ConnectionManager","context","connector","triedEager","tried","setTried","isAuthorized","catch","useEagerConnect","suppress","error","ethereum","window","on","handleConnect","handleChainChanged","chainId","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","getLibrary","library","Web3Provider","pollingInterval","WrappedWeb3ReactProvider","App","position","zIndex","padding","logo","theme","mode","defaultSelectedKeys","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1555b7b.chunk.js","sourcesContent":["import { TableColumnType } from 'antd';\n\nexport interface Amounts {\n  amount_coin: number;\n  amount_usd: number;\n}\n\nexport interface WalletAmounts {\n  eth: Amounts;\n  pol: Amounts;\n  bsc: Amounts;\n  dai: Amounts;\n}\n\nexport interface Coin {\n  key: string;\n  name: string;\n  img_url: string;\n}\n\nexport enum WalletKey {\n  WALLET1 = 'wallet1',\n  WALLET2 = 'wallet2',\n  WALLET3 = 'wallet3',\n  WALLET4 = 'wallet4',\n}\n\nexport interface DataType {\n  key: React.Key;\n  coin: Coin;\n  portfolio: Amounts;\n\n  [WalletKey.WALLET1]: WalletAmounts;\n  [WalletKey.WALLET2]: WalletAmounts;\n  [WalletKey.WALLET3]: WalletAmounts;\n  [WalletKey.WALLET4]: WalletAmounts;\n}\n\nexport enum ChainKey {\n  ETH = 'eth',\n  POL = 'pol',\n  BSC = 'bsc',\n  DAI = 'dai',\n}\n\nexport interface ColomnType extends TableColumnType<DataType> {\n  children?: Array<ColomnType>;\n}\n\nexport interface Summary {\n  portfolio: {\n    amount_usd: number;\n    percentage_of_portfolio: number;\n  },\n  [WalletKey.WALLET1]: any;\n  [WalletKey.WALLET2]: any;\n  [WalletKey.WALLET3]: any;\n  [WalletKey.WALLET4]: any;\n}\nexport interface Wallet {\n  key: WalletKey;\n  name: string;\n  address: string;\n  chains: Array<ChainKey>;\n  loading: boolean;\n}\n","export default __webpack_public_path__ + \"static/media/icon192.8a2cafb6.png\";","import {ethers} from \"ethers\";\nimport erc20_abi from './ABI/ERC_20.json'\n\n\nconst RpcUrls ={\n  ETH: process.env.REACT_APP_RPC_URL_MAINNET,\n  BNB: process.env.REACT_APP_RPC_URL_BSC,\n  POLYGON: process.env.REACT_APP_RPC_URL_POLYGON_MAINNET,\n  XDAI: process.env.REACT_APP_RPC_URL_XDAI,\n}\n\nconst provider =  {\n  ETH : new ethers.providers.JsonRpcProvider(RpcUrls.ETH),\n  BNB: new ethers.providers.JsonRpcProvider(RpcUrls.BNB),\n  POL : new ethers.providers.JsonRpcProvider(RpcUrls.POLYGON),\n  DAI: new ethers.providers.JsonRpcProvider(RpcUrls.XDAI),\n}\n \n//logic: token -> provider for each chain\nconst availableTokens = {\n  ETH:{\n    BNB: new ethers.Contract('0x2170ed0880ac9a755fd29b2688956bd959f933f8', erc20_abi, provider.BNB),\n    POL: new ethers.Contract('0xfD8ee443ab7BE5b1522a1C020C097CFF1ddC1209', erc20_abi, provider.POL),\n    DAI: new ethers.Contract('0xa5c7cb68cd81640D40c85b2e5Ec9E4Bb55Be0214', erc20_abi, provider.DAI) \n  }, // check\n  BNB:{\n    ETH: new ethers.Contract('0xB8c77482e45F1F44dE1745F52C74426C631bDD52', erc20_abi, provider.ETH),\n    POL: new ethers.Contract('0xA649325Aa7C5093d12D6F98EB4378deAe68CE23F', erc20_abi, provider.POL),\n    DAI: new ethers.Contract('0xCa8d20f3e0144a72C6B5d576e9Bd3Fd8557E2B04', erc20_abi, provider.DAI) // xdai explorer says wbnb 0xCa8d20f3e0144a72C6B5d576e9Bd3Fd8557E2B04\n  }, // check\n  POL:{\n    ETH: new ethers.Contract('0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0', erc20_abi, provider.ETH),\n    BNB: new ethers.Contract('0xa90cb47c72f2c7e4411e781772735d9317d08dd4', erc20_abi, provider.BNB),\n    DAI: new ethers.Contract('0x7122d7661c4564b7C6Cd4878B06766489a6028A2', erc20_abi, provider.DAI) \n  }, //check\n  DAI:{\n    ETH: new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', erc20_abi, provider.ETH),\n    BNB: new ethers.Contract('0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', erc20_abi, provider.BNB),\n    POL: new ethers.Contract('0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063', erc20_abi, provider.POL),\n    \n    \n  },\n}\n\n\nfunction getListOfSupportedTokens() {\n  return Object.keys(availableTokens)\n};\n\nasync function getTokenBalanceFor(tokenList:Array<string>, walletAdress: string) {\n  \n  //TODO:check if unsupported token in given List.\n  if (!tokenList.every(r=> getListOfSupportedTokens().includes(r))){\n    console.log(\"Some of the provided tokens are not supported\");\n    return null;\n  }\n\n\n  var balances: {[k: string]: object} = {}\n  for(const t in tokenList){\n    var balanceAcrossChains: {[k: string]: number} = {}\n    // get native/base chain token balance\n    // TODO: What if token is not a chain/base native token?\n    const providerIndex: keyof typeof provider = tokenList[t] as keyof typeof provider;\n  \n    const nativeBalance = await provider[providerIndex].getBalance(walletAdress);\n    balanceAcrossChains[tokenList[t]] = parseFloat(ethers.utils.formatEther(nativeBalance));\n    \n    // get token on other chains\n    const tokenIndex: keyof typeof availableTokens = tokenList[t] as keyof typeof availableTokens;\n    const chains = availableTokens[tokenIndex];\n    for (const [chain, contract] of Object.entries(chains)) {\n      const externalBalance = await contract.balanceOf(walletAdress);\n      balanceAcrossChains[chain] = parseFloat(ethers.utils.formatEther(externalBalance))\n    }\n    balances[tokenList[t]] = balanceAcrossChains;\n  }\n  console.table(balances)\n  return balances\n \n};\n\n\n getTokenBalanceFor(getListOfSupportedTokens(), \"0x520fF0fBAC3cd357F29030741Cf8b4acB1e01e0B\");\n\n\n\n\n\n\nasync function getEthAcrossChains(wallet: string){\n  return new Promise(async (resolve, reject) =>  {\n\n    const onEth = await provider.ETH.getBalance(wallet);\n    const onBsc = await availableTokens.ETH.BNB.balanceOf(wallet);\n    const onPolygon = await availableTokens.ETH.POL.balanceOf(wallet);\n    const onXdai = await availableTokens.ETH.DAI.balanceOf(wallet);\n\n    const ethBalances = {\n      onEth : parseFloat(ethers.utils.formatEther(onEth)),\n      onBsc : parseFloat(ethers.utils.formatEther(onBsc)),\n      onPolygon : parseFloat(ethers.utils.formatEther(onPolygon)),\n      onXdai : parseFloat(ethers.utils.formatEther(onXdai)),\n    }\n\n    resolve (ethBalances)\n  })\n}\n\nasync function getDaiAcrossChains(wallet: string){\n  return new Promise(async (resolve, reject) =>  {\n\n    const onEth = await availableTokens.DAI.ETH.balanceOf(wallet);\n    const onBsc = await availableTokens.DAI.BNB.balanceOf(wallet);\n    const onPolygon = await availableTokens.DAI.POL.balanceOf(wallet);\n    const onXdai = await provider.DAI.getBalance(wallet); // moved\n\n    const daiBalances = {\n      onEth : parseFloat(ethers.utils.formatEther(onEth)),\n      onBsc : parseFloat(ethers.utils.formatEther(onBsc)),\n      onPolygon : parseFloat(ethers.utils.formatEther(onPolygon)),\n      onXdai : parseFloat(ethers.utils.formatEther(onXdai)),\n    }\n\n    resolve (daiBalances)\n  })\n}\n\nasync function getPolygonAcrossChains(wallet: string){\n  return new Promise(async (resolve, reject) =>  {\n\n    const onEth = await availableTokens.POL.ETH.balanceOf(wallet);\n    const onBsc = await availableTokens.POL.BNB.balanceOf(wallet);\n    const onPolygon =  await provider.POL.getBalance(wallet);\n    const onXdai = await availableTokens.POL.DAI.balanceOf(wallet);\n\n    const polygonBalances = {\n      onEth : parseFloat(ethers.utils.formatEther(onEth)),\n      onBsc : parseFloat(ethers.utils.formatEther(onBsc)),\n      onPolygon : parseFloat(ethers.utils.formatEther(onPolygon)),\n      onXdai : parseFloat(ethers.utils.formatEther(onXdai)),\n    }\n\n    resolve (polygonBalances)\n  })\n}\n\nasync function getBNBAcrossChains(wallet: string){\n  return new Promise(async (resolve, reject) =>  {\n\n    const onEth = await availableTokens.BNB.ETH.balanceOf(wallet);\n    const onBsc = await provider.BNB.getBalance(wallet);\n    const onPolygon = await availableTokens.BNB.POL.balanceOf(wallet);\n    const onXdai = await availableTokens.BNB.DAI.balanceOf(wallet);\n\n    const bnbBalances = {\n      onEth : parseFloat(ethers.utils.formatEther(onEth)),\n      onBsc : parseFloat(ethers.utils.formatEther(onBsc)),\n      onPolygon : parseFloat(ethers.utils.formatEther(onPolygon)),\n      onXdai : parseFloat(ethers.utils.formatEther(onXdai)),\n    }\n\n    resolve (bnbBalances)\n  })\n}\n\n\nexport {getEthAcrossChains, getBNBAcrossChains, getDaiAcrossChains, getPolygonAcrossChains, getTokenBalanceFor, getListOfSupportedTokens}\n\n\n","import { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\n\nconst CHAINS = {\n  MAINNET: 1,\n  ROPSTEN: 3,\n  RINKEBY: 4,\n  KOVAN: 42,\n  \n  BSC: 56,\n  // BSC_TESTNET: 97,\n\n  POLYGON: 137,\n  MUMBAI: 80001,\n\n  XDAI: 100,\n};\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  [CHAINS.MAINNET]: process.env.REACT_APP_RPC_URL_MAINNET as string,\n  [CHAINS.ROPSTEN]: process.env.REACT_APP_RPC_URL_ROPSTEN as string,\n  [CHAINS.RINKEBY]: process.env.REACT_APP_RPC_URL_RINKEBY as string,\n  [CHAINS.KOVAN]: process.env.REACT_APP_RPC_URL_KOVAN as string,\n  \n  [CHAINS.BSC]: process.env.REACT_APP_RPC_URL_BSC as string,\n  // [CHAINS.BSC_TESTNET]: process.env.REACT_APP_RPC_URL_BSC_TESTNET as string,\n  \n  [CHAINS.POLYGON]: process.env.REACT_APP_RPC_URL_POLYGON_MAINNET as string,\n  [CHAINS.MUMBAI]: process.env.REACT_APP_RPC_URL_POLYGON_MUMBAI as string,\n\n  [CHAINS.XDAI]: process.env.REACT_APP_RPC_URL_XDAI as string,\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: Object.values<number>(CHAINS),\n});\n\nexport const network = new NetworkConnector({\n  urls: Object.fromEntries(\n    Object.values<number>(CHAINS).map(i => [i, RPC_URLS[i]])\n  ),\n  defaultChainId: CHAINS.MAINNET,\n});\n","import { useWeb3React } from '@web3-react/core';\nimport { Button } from 'antd';\nimport React from 'react';\n\nimport { injected } from './connectors';\n\nfunction ConnectButton() {\n  const { activate } = useWeb3React();\n\n\n  return (\n    <Button style={{ display: 'block' }} onClick={() => activate(injected)}>\n      Connect with MetaMask\n    </Button>\n  );\n}\n\nexport default ConnectButton;\n","import { ChainKey, Wallet, WalletKey } from '../types';\n\nconst isSupported = () => {\n  try {\n    var itemBackup = localStorage.getItem(\"\");\n    localStorage.removeItem(\"\");\n    if (itemBackup === null)\n      localStorage.removeItem(\"\");\n    else\n      localStorage.setItem(\"\", itemBackup);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nconst storeWallets = (wallets: Array<Wallet>) => {\n  if (isSupported()) {\n    localStorage.setItem('wallets', JSON.stringify(wallets.map(item => item.address)))\n  }\n}\n\nconst readWallets = (): Array<Wallet> => {\n  if (!isSupported()) {\n    return []\n  }\n  \n  const walletsString = localStorage.getItem('wallets')\n  if (walletsString) {\n    try {\n      const addresses = JSON.parse(walletsString)\n      const walletKeys = Object.values(WalletKey)\n      let walletIndex = 0\n\n      return addresses.map((address: string) => {\n        return {\n          key: walletKeys[walletIndex++],\n          name: 'My Wallet',\n          address: address,\n          chains: Object.values(ChainKey),\n          loading: false,\n        }\n      })\n    }\n    catch (e) {\n      return []\n    }\n  } else {\n    return []\n  }\n}\n\n\n\nexport { isSupported, storeWallets, readWallets }\n","import { useWeb3React } from '@web3-react/core';\nimport { Avatar, Badge, Button, Col, Input, Modal, Row, Skeleton, Table, Tooltip } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport React, { useEffect, useState } from 'react';\nimport { Amounts, ChainKey, Coin, ColomnType, DataType, Summary, Wallet, WalletAmounts, WalletKey } from '../types';\nimport './Dashboard.css';\nimport  '../services/balanceService'\nimport { getBNBAcrossChains, getDaiAcrossChains, getEthAcrossChains, getPolygonAcrossChains } from '../services/balanceService';\nimport { DeleteOutlined, SyncOutlined, WalletOutlined } from '@ant-design/icons';\nimport ConnectButton from './web3/ConnectButton';\nimport { ethers } from 'ethers';\nimport { readWallets, storeWallets } from '../services/localStorage';\n\nconst COINS = {\n  ETH: 'ETH',\n  MATIC: 'MATIC',\n  BNB: 'BNB',\n  DAI: 'DAI',\n}\nconst ChainDetails = {\n  [ChainKey.ETH]: {\n    name: 'Ethereum',\n    gasName: COINS.ETH,\n  },\n  [ChainKey.BSC]: {\n    name: 'Binance Smart Chain',\n    gasName: COINS.BNB,\n  },\n  [ChainKey.POL]: {\n    name: 'Polygon',\n    gasName: COINS.MATIC,\n  },\n  [ChainKey.DAI]: {\n    name: 'xDai',\n    gasName: COINS.DAI,\n  },\n}\n\nconst coins : Array<Coin> = [\n  {\n    key: COINS.ETH,\n    name: COINS.ETH,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: COINS.MATIC,\n    name: COINS.MATIC,\n    img_url: 'https://zapper.fi/images/networks/polygon/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: COINS.BNB,\n    name: COINS.BNB,\n    img_url: 'https://zapper.fi/images/networks/binance-smart-chain/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: COINS.DAI,\n    name: COINS.DAI,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x6b175474e89094c44da98b954eedeac495271d0f.png',\n  }\n]\n\n// modals\nconst showGasModal = (gas: ChainKey) => {\n  switch (gas) {\n    case ChainKey.ETH:\n      Modal.info({\n        title: 'Gas Info for ethereum chain',\n        content: (\n          <div>\n            You need to buy ETH.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.POL:\n      Modal.info({\n        title: 'Gas Info for Polygon/Matic chain',\n        content: (\n          <div>\n            You need to buy MATIC.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.BSC:\n      Modal.info({\n        title: 'Gas Info for Binance Smart Chain',\n        content: (\n          <div>\n            You need to buy BNB.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.DAI:\n      Modal.info({\n        title: 'Gas Info for xDAI chain',\n        content: (\n          <div>\n            You can get some free DAI using those faucets. It should be enough to exchange or move your funds.\n            <ul>\n              <li><a href=\"https://xdai-app.herokuapp.com/faucet\" target=\"_blank\" rel=\"nofollow noreferrer\">https://xdai-app.herokuapp.com/faucet</a></li>\n              <li><a href=\"https://blockscout.com/xdai/mainnet/faucet\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blockscout.com/xdai/mainnet/faucet</a></li>\n            </ul>\n          </div>\n        )\n      })\n      break;\n  }\n}\n\n// render formatters\nfunction renderGas(data: Array<DataType>, walletKey: WalletKey, chain: ChainKey, coinName: string) {\n  const coin = data.find(coin => coin.coin.name === coinName)\n  const wallet = coin && coin[walletKey]\n  const amounts = wallet ? wallet[chain] : { amount_coin: 0 }\n\n  const tooltipsEmpty = {\n    [ChainKey.ETH]: (<>The Ethereum chain requires ETH to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.ETH)}>Get ETH</Button></>),\n    [ChainKey.POL]: (<>The Polygon/Matic chain requires MATIC to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.POL)}>Get MATIC</Button></>),\n    [ChainKey.BSC]: (<>The Binance Smart Chain requires BNB to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.BSC)}>Get BNB</Button></>),\n    [ChainKey.DAI]: (<>The xDAI chain requires DAI to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.DAI)}>Get DAI</Button></>),\n  }\n  const tooltipEmpty = tooltipsEmpty[chain];\n  const tooltips = {\n    [ChainKey.ETH]: (<>The Ethereum chain requires ETH to pay for gas.</>),\n    [ChainKey.POL]: (<>The Polygon/Matic chain requires MATIC to pay for gas.</>),\n    [ChainKey.BSC]: (<>The Binance Smart Chain requires BNB to pay for gas.</>),\n    [ChainKey.DAI]: (<>The xDAI chain requires DAI to pay for gas.</>),\n  }\n  const tooltip = tooltips[chain];\n  return (\n    <div className=\"gas\">\n      <div className=\"amount_coin\">\n        { amounts.amount_coin === -1 ? (\n          <Tooltip title={tooltip}>\n          {coinName}: <Skeleton.Button style={{ width: 60}} active={true} size={'small'} shape={'round'} />\n        </Tooltip>\n        ) : amounts.amount_coin === 0 ? (\n          <Tooltip color=\"red\" title={tooltipEmpty}>\n            {coinName}: -\n            <Badge size=\"small\" count={'!'} offset={[5, -15]}/>\n          </Tooltip>\n        ) : (\n          <Tooltip title={tooltip}>\n            {coinName}: {amounts.amount_coin.toLocaleString(undefined, { minimumFractionDigits: 4, maximumFractionDigits: 4 })}\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction renderAmounts(amounts: Amounts) {\n  if (amounts.amount_coin === -1) {\n    // loading\n    return (\n      <div className=\"amounts\">\n        <div className=\"amount_coin\">\n          <Skeleton.Button style={{ width: 70}} active={true} size={'small'} shape={'round'} />\n        </div>\n        <div className=\"amount_usd\">\n          <Skeleton.Button style={{ width: 60, height: 18}} active={true} size={'small'} shape={'round'} />\n        </div>\n      </div>\n    )\n  } else if (amounts.amount_coin === 0) {\n    // empty\n    return (\n      <div className=\"amounts amounts-empty\">\n        <div className=\"amount_coin\">00.0000</div>\n        <div className=\"amount_usd\">00.00</div>\n      </div>\n    )\n  } else {\n    // default\n    return (\n      <div className={'amounts' + (amounts.amount_coin === 0 ? ' amounts-empty' : '') }>\n        <div className=\"amount_coin\">{amounts.amount_coin.toLocaleString(undefined, { minimumFractionDigits: 4, maximumFractionDigits: 4 })}</div>\n        <div className=\"amount_usd\">{amounts.amount_usd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} USD</div>\n      </div>\n    )\n  }\n}\n\nfunction renderSummary(summary: any) {\n  return (\n    <div className=\"amounts\">\n      <div className=\"amount_coin\">{summary.amount_usd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} USD</div>\n      <div className=\"amount_usd\">{summary.percentage_of_portfolio.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} % of portfolio</div>\n    </div>\n  )\n}\n\nfunction renderCoin(coin: Coin) {\n  return (\n    <div className=\"coin\">\n      <Avatar\n        src={coin.img_url}\n        alt={coin.name}\n      />\n    </div>\n  )\n}\n\n// builders\n\n\nconst buildDataRow = (coin: any) : DataType => {\n  const emptyWalletAmounts : WalletAmounts = {\n    [ChainKey.ETH]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.BSC]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.POL]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.DAI]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n  }\n\n  const row = {\n    key: coin.key,\n    coin: coin,\n    portfolio: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [WalletKey.WALLET1]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET2]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET3]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET4]: deepClone(emptyWalletAmounts),\n  }\n\n  return row\n}\n\nconst buildDataRows = (coins: Array<any>) : Array<DataType> => {\n  return coins.map(coin => buildDataRow(coin))\n}\n\n// columns\nconst baseWidth = 150;\nconst coinColumn : ColomnType = {\n  title: 'Coins',\n  fixed: 'left',\n  dataIndex: 'coin',\n  render: renderCoin,\n  width: 60,\n}\nconst portfolioColumn : ColomnType = {\n  title: 'Portfolio',\n  width: baseWidth + 10,\n  dataIndex: 'portfolio',\n  render: renderAmounts,\n}\nconst addColumn : ColomnType = {\n  title: (\n    <Button>\n      Add Wallet\n    </Button>\n  ),\n  dataIndex: '',\n  width: 100,\n}\nconst walletColumn: ColomnType = {\n  title: 'No Wallet Connected',\n  children: [\n    {\n      title: 'Ethereum',\n      children: [{\n        title: COINS.ETH,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }]\n    },\n    {\n      title: 'Polygon',\n      children: [{\n        title: COINS.MATIC,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n    {\n      title: 'Binance Smart Chain',\n      children: [{\n        title: COINS.BNB,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n    {\n      title: 'xDai',\n      children: [{\n        title: COINS.DAI,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n  ],\n}\nconst baseColumns = [\n  coinColumn,\n  portfolioColumn,\n  walletColumn,\n  addColumn,\n]\n\nconst emptySummaryAmounts = {\n  amount_usd: 0,\n  percentage_of_portfolio: 0,\n}\nconst emptySummaryWallet = {\n  [ChainKey.ETH]: emptySummaryAmounts,\n  [ChainKey.BSC]: emptySummaryAmounts,\n  [ChainKey.POL]: emptySummaryAmounts,\n  [ChainKey.DAI]: emptySummaryAmounts,\n}\nconst emptySummary : Summary = {\n  portfolio: {\n    amount_usd: 0,\n    percentage_of_portfolio: 100,\n  },\n  [WalletKey.WALLET1]: emptySummaryWallet,\n  [WalletKey.WALLET2]: emptySummaryWallet,\n  [WalletKey.WALLET3]: emptySummaryWallet,\n  [WalletKey.WALLET4]: emptySummaryWallet,\n}\n\nfunction deepClone(obj : any) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction Dashboard() {\n  const [data, setData] = useState<Array<DataType>>(buildDataRows(coins));\n  const [columns, setColumns] = useState<Array<ColomnType>>(baseColumns)\n  const [summary, setSummary] = useState<Summary>(deepClone(emptySummary))\n  const [wallets, setWallets] = useState<Array<Wallet>>([])\n  const [walletModalVisible, setWalletModalVisible] = useState(false);\n  const [walletModalAddress, setWalletModalAddress] = useState('');\n\n  const web3 = useWeb3React()\n\n  const calculatePortfolio = (coin : DataType) => {\n    // sum portfolio\n    coin.portfolio.amount_coin = 0;\n    coin.portfolio.amount_usd = 0;\n    Object.values(WalletKey).forEach((walletKey : WalletKey) => {\n      Object.values(ChainKey).forEach((chainKey: ChainKey) => {\n        if (coin[walletKey][chainKey].amount_coin > 0) {\n          coin.portfolio.amount_coin += coin[walletKey][chainKey].amount_coin;\n          coin.portfolio.amount_usd += coin[walletKey][chainKey].amount_usd;\n        }\n      })\n    })\n  }\n\n  const clearWalletData = (walletKey : WalletKey) => {\n    setData(data.map(coin => {\n      Object.values(ChainKey).forEach(chain => {\n        coin[walletKey][chain].amount_coin = -1\n        coin[walletKey][chain].amount_usd = -1\n      })\n      \n      calculatePortfolio(coin)\n      return coin\n    }))\n  }\n\n  const updateAmounts = (walletKey : WalletKey, coinKey: string, amounts : any) => {\n    setData(data.map(coin => {\n      if (coin.key === coinKey && coin[walletKey]) {\n        coin[walletKey].eth.amount_coin = amounts.onEth;\n        coin[walletKey].eth.amount_usd = amounts.onEth; // debug\n        coin[walletKey].bsc.amount_coin = amounts.onBsc;\n        coin[walletKey].bsc.amount_usd = amounts.onBsc; // debug\n        coin[walletKey].pol.amount_coin = amounts.onPolygon;\n        coin[walletKey].pol.amount_usd = amounts.onPolygon; // debug\n        coin[walletKey].dai.amount_coin = amounts.onXdai;\n        coin[walletKey].dai.amount_usd = amounts.onXdai; // debug\n\n        calculatePortfolio(coin)\n      }\n      return coin\n    }))\n  }\n\n  const updateWalletAmounts = (wallet: Wallet) => {\n    getEthAcrossChains(wallet.address)\n      .then((amounts : any) => {\n        updateAmounts(wallet.key, COINS.ETH, amounts)\n      })\n    getDaiAcrossChains(wallet.address)\n    .then((amounts : any) => {\n      updateAmounts(wallet.key, COINS.DAI, amounts)\n    })\n    getPolygonAcrossChains(wallet.address)\n    .then((amounts : any) => {\n      updateAmounts(wallet.key, COINS.MATIC, amounts)\n    })\n    getBNBAcrossChains(wallet.address)\n    .then((amounts : any) => {\n      updateAmounts(wallet.key, COINS.BNB, amounts)\n    })\n  }\n\n  const removeWallet = (wallet : Wallet) => {\n    const newWallets = wallets.filter(item => item.key !== wallet.key)\n    storeWallets(newWallets)\n    setWallets(newWallets)\n    clearWalletData(wallet.key)\n  }\n\n  const triggerWalletUpdate = (wallet : Wallet) => {\n    clearWalletData(wallet.key)\n\n    setWallets(wallets.map((item : Wallet) => {\n      if (item.key === wallet.key) {\n        item.loading = false\n      }\n      return item\n    }))\n  }\n\n  const findUnusedWalletKey = () : WalletKey => {\n    for (const key of Object.values(WalletKey)) {\n      if (!wallets.find((item : Wallet) => item.key === key)) {\n        return key\n      }\n    }\n    throw new Error('No more keys available')\n  }\n\n  const addWallet = (address : string) => {\n    const wallet : Wallet = {\n      key: findUnusedWalletKey(),\n      name: 'My Wallet',\n      address: address,\n      chains: Object.values(ChainKey),\n      loading: false,\n    }\n    const newWallets = [...wallets, wallet]\n    storeWallets(newWallets)\n    setWallets(newWallets)\n  }\n\n  const showWalletModal = () => {\n    setWalletModalVisible(true);\n  };\n\n  const getModalAddressSuggestion = () => {\n    const addedWallets = wallets.map(wallet => wallet.address)\n    const web3Account = (web3.account && addedWallets.indexOf(web3.account) === -1) ? web3.account : ''\n    return walletModalAddress || web3Account;\n  }\n\n  const handleWalletModalAdd = () => {\n    const address = getModalAddressSuggestion();\n    if (ethers.utils.isAddress(address)) {\n      addWallet(address)\n      setWalletModalVisible(false)\n      setWalletModalAddress('')\n    }\n  };\n\n  const handleWalletModalClose = () => {\n    if (wallets.length) {\n      setWalletModalVisible(false)\n    }\n  }\n\n  // Automatically trigger update\n  useEffect(() => {\n    let changed = false\n    const newWallets = wallets.map((wallet) => {\n      if (!wallet.loading) {\n        // trigger update if wallet is not already loading/loaded\n        wallet.loading = true\n        changed = true\n        updateWalletAmounts(wallet)\n      }\n      return wallet\n    })\n\n    // only update wallets if at least one update was triggered\n    if (changed) {\n      setWallets(newWallets)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallets, data])\n\n  const buildWalletColumn = (data: Array<DataType>, wallet : Wallet) => {\n    const children : Array<ColomnType> = wallet.chains.map(chainKey => {\n      return {\n        title: ChainDetails[chainKey].name,\n        children: [{\n          title: renderGas(data, wallet.key, chainKey, ChainDetails[chainKey].gasName),\n          dataIndex: [wallet.key, chainKey],\n          width: baseWidth,\n          render: renderAmounts,\n        }]\n      }\n    })\n  \n    return {\n      title: (\n        <Row>\n          <Col span={12} offset={6}>\n            {`\"${wallet.name}\" ${wallet.address.substr(0,4)}...${wallet.address.substr(-4,4)}`}\n          </Col>\n          <Col span={1} offset={4}>\n            <SyncOutlined onClick={() => triggerWalletUpdate(wallet)} />\n          </Col>\n          <Col span={1} offset={0}>\n            <DeleteOutlined onClick={() => removeWallet(wallet)} />\n          </Col>\n  \n          \n        </Row>\n      ),\n      children\n    }\n  }\n\n  // keep columns in sync\n  useEffect(() => {\n    const addColumn = {\n      title: (\n        <Button onClick={showWalletModal}>\n          Add Wallet\n        </Button>\n      ),\n      dataIndex: '',\n      width: 100,\n    }\n    const walletColumns = wallets.length ? wallets.map(wallet => buildWalletColumn(data, wallet)) : [walletColumn]\n    const columns = [\n      coinColumn,\n      portfolioColumn,\n      ...walletColumns,\n      addColumn,\n    ]\n    setColumns(columns)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallets, data])\n\n  // keep Summary in sync\n  useEffect(() => {\n    // sum for each chain in each wallet\n    const newSummary = data.reduce((summary : Summary, coin) => {\n      wallets.forEach((wallet: Wallet) => {\n        wallet.chains.forEach((chainName: ChainKey) => {\n          if (coin[wallet.key][chainName].amount_usd !== -1) {\n            summary[wallet.key][chainName].amount_usd += coin[wallet.key][chainName].amount_usd\n          }\n        })\n      })\n\n      return summary\n    }, deepClone(emptySummary))\n\n    // total sum\n    newSummary.portfolio.amount_usd = 0;\n    wallets.forEach((wallet: Wallet) => {\n      wallet.chains.forEach((chainKey: ChainKey) => {\n        newSummary.portfolio.amount_usd += newSummary[wallet.key][chainKey].amount_usd\n      })\n    })\n\n    // calculate percentages\n    wallets.forEach((wallet: Wallet) => {\n      wallet.chains.forEach((chainKey: ChainKey) => {\n        newSummary[wallet.key][chainKey].percentage_of_portfolio = newSummary[wallet.key][chainKey].amount_usd === 0\n          ? 0\n          : newSummary[wallet.key][chainKey].amount_usd / newSummary.portfolio.amount_usd * 100\n      })\n    })\n\n    // set new Summary\n    setSummary(newSummary)\n  }, [data, wallets])\n\n  // Setup\n  useEffect(() => {\n    if (!wallets.length && !walletModalVisible) {\n      // check localStorage\n      const storedWallets = readWallets()\n      if (storedWallets.length) {\n        setWallets(storedWallets)\n      } else {\n        setWalletModalVisible(true);\n      }\n    }\n  }, [wallets, walletModalVisible])\n\n\n  let summaryIndex = 0\n  return (\n    <Content className=\"site-layout\">\n      <div className=\"site-layout-background\" style={{ minHeight: 'calc(100vh - 64px)' }}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          bordered\n          size=\"middle\"\n          scroll={{ x: '1000px', y: 'calc(100vh - 277px)' }}\n          pagination={false}\n          summary={() => (\n            <Table.Summary fixed>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={summaryIndex}>SUM</Table.Summary.Cell>\n                <Table.Summary.Cell index={summaryIndex++}>{renderSummary(summary.portfolio)}</Table.Summary.Cell>\n                { wallets.map((wallet: Wallet) => wallet.chains.map((chainName: ChainKey) => (\n                  <Table.Summary.Cell index={summaryIndex++} key={wallet.key + chainName}>{renderSummary(summary[wallet.key][chainName])}</Table.Summary.Cell>\n                )))}\n                { wallets.length === 0 && Object.values(ChainKey).map(() => (\n                  <Table.Summary.Cell index={summaryIndex++} key={summaryIndex}></Table.Summary.Cell>\n                ))}\n                <Table.Summary.Cell index={summaryIndex++}></Table.Summary.Cell>\n              </Table.Summary.Row>\n            </Table.Summary>\n          )}\n        />\n      </div>\n\n      <Modal\n        title=\"Add Wallet\"\n        visible={walletModalVisible}\n        onOk={handleWalletModalAdd}\n        onCancel={handleWalletModalClose}\n        footer={[\n            // only show close if other wallets have been added already\n            wallets.length ? (\n              <Button key=\"back\" onClick={handleWalletModalClose}>\n                Close\n              </Button>\n            ) : '',\n            <Button key=\"submit\" type=\"primary\" onClick={handleWalletModalAdd}>\n              Add\n            </Button>,\n        ]}\n      >\n        \n        { !web3.account ? (<ConnectButton />) : (<Button style={{ display: 'block' }}>Connected with {web3.account.substr(0, 4)}...</Button>)}\n        \n        Enter a wallet address:\n        <Input \n          size=\"large\" \n          placeholder=\"0x...\" \n          prefix={<WalletOutlined />}\n          value={getModalAddressSuggestion()}\n          onChange={(event) => setWalletModalAddress(event.target.value)}\n        />\n\n      </Modal>\n    </Content>\n  );\n}\n\nexport default Dashboard;\n","import { Web3Provider } from '@ethersproject/providers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect } from 'react';\n\nimport { useEagerConnect, useInactiveListener } from './hooks';\nimport { network } from './connectors';\n\nfunction Web3ConnectionManager({ children }: { children: JSX.Element }) {\n  const context = useWeb3React<Web3Provider>();\n  const { connector, activate, active } = context;\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  useEffect(() => {\n    if (triedEager && !active) {\n      activate(network);\n    }\n  }, [triedEager, active, connector, activate]);\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager);\n\n  return children;\n}\n\nexport default Web3ConnectionManager;\n","import { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\n\nimport { injected } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { ethereum } = window as any; // TODO: Fix typing\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { Web3Provider } from '@ethersproject/providers';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport React from 'react';\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nfunction WrappedWeb3ReactProvider({ children }: { children: JSX.Element }) {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>\n  );\n}\n\nexport default WrappedWeb3ReactProvider;\n","import React from 'react';\nimport logo from './assets/icon192.png';\nimport { Layout, Menu } from 'antd';\nimport { Header } from 'antd/lib/layout/layout';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Web3ConnectionManager from './components/web3/Web3ConnectionManager';\nimport WrappedWeb3ReactProvider from './components/web3/WrappedWeb3ReactProvider';\n\nfunction App() {\n  return (\n    <WrappedWeb3ReactProvider>\n    <Web3ConnectionManager>\n    <Layout>\n      <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: 0 }}>\n        <img src={logo} className=\"logo\" alt={process.env.REACT_APP_PROJECT_NAME} />\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\">Dashboard</Menu.Item>\n        </Menu>\n      </Header>\n\n      <Dashboard></Dashboard>\n\n      {/* <Footer style={{ textAlign: 'center' }}>©2021</Footer> */}\n    </Layout>\n    </Web3ConnectionManager>\n    </WrappedWeb3ReactProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './services/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}